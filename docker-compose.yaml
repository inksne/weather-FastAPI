services:
  back:
    image: inksne/weather-back-image:latest
    container_name: back-container
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "10000:10000"
    env_file:
      - ./.env
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "10000"]
    restart: always
    depends_on:
      - postgres
      - redis
    networks:
      - app-network
      
  postgres:
    image: postgres:alpine
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 10s
      retries: 5
      timeout: 5s
    networks:
      - app-network

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5
      timeout: 5s
    networks:
      - app-network

volumes:
  postgres-data:

networks:
  app-network: